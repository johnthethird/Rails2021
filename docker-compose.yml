version: "3.8"

# Define some YAML keys that will be included in the services below
# This is just to keep things DRY (Dont Repeat Yourself)
x-app: &app
  build:
    # When docker starts the build process, it sends over the context to the Docker daemon.
    # We set the context to be the /docker folder so thats its small, we dont really need it for our purposes.
    context: docker
    # Our dev Dockerfile is configurable with the exact versions we need for this specific project.
    # This makes it easy to use in other projects with other version requirements.
    dockerfile: Dockerfile.dev
    args:
      RUBY_VERSION: "2.7.2"
      PG_MAJOR: "13"
      NODE_MAJOR: "15"
      YARN_VERSION: "1.22.5"
      BUNDLER_VERSION: "2.1.4"
  environment: &env
    NODE_ENV: development
    # This notation uses the ENV var or if it doesnt exist use the default value of 'development'
    RAILS_ENV: ${RAILS_ENV:-development}
  image: "rails2021-dev:1.0.3"
  # Use the Tini init process for proper signals and reaping inside the container
  init: true
  logging: &logging
    options:
      max-size: "10M"
      max-file: "1"
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  # These next 2 keys allow interactive terminals to be attached to our containers
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - node_modules:/app/node_modules
    - packs:/app/public/packs
    - storage:/app/storage
    - bundle:/usr/local/bundle
  environment:
    <<: *env
    EDITOR: vi
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    DATABASE_URL: postgres://postgres:password@postgres:5432/rails2021_development
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEBPACKER_DEV_SERVER_HOST: webpacker
    WEB_CONCURRENCY: 1
    RAILS_SERVE_STATIC_FILES: "true"
    RAILS_LOG_TO_STDOUT: "true"
    GOOD_JOB_EXECUTION_MODE: "inline"
    CAPYBARA_SERVER_PORT: "${CAPYBARA_SERVER_PORT:-3434}"
    # The test server WILL NOT BE AVAILABLE from outside the container if it binds
    # to 127.0.0.1. It must bind to 0.0.0.0 to be exposed to the outside world.
    CAPYBARA_SERVER_HOST: "${CAPYBARA_SERVER_HOST:-0.0.0.0}"
  depends_on:
    postgres:
      condition: service_healthy

services:
  rails:
    <<: *backend
    command: bin/puma
    restart: unless-stopped
    ports:
      - "${CAPYBARA_SERVER_PORT:-3434}:${CAPYBARA_SERVER_PORT:-3434}"
      - "3000:3000"

  worker:
    <<: *backend
    command: bin/good_job start

  webpacker:
    <<: *app
    command: bin/webpack-dev-server --watch --colors --progress
    ports:
      - "3035:3035"
    volumes:
      - .:/app:delegated
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    environment:
      <<: *env
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0

  postgres:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: rails2021_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s
    logging:
      <<: *logging

volumes:
  postgres:
  bundle:
  node_modules:
  rails_cache:
  packs:
  storage:
